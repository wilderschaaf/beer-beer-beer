  <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Search Beers</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
          <form action="/bsearch" class="navbar-form navbar-right">
            <div class="form-group">
              <input type="text" name='beer' class="form-control">
            </div>
            <button type="submit" class="btn btn-success">Search</button>
          </form>
        </div><!--/.navbar-collapse -->
      </div>
    </nav>
<div class="container"> 
    <div class='row'>
        <div class='col-md-6'>
            <div class='containter'>
           <!--      <div id='maincontainer' class='container' style='padding: 0%; overflow: hidden;'> -->
                  <div class='row'>
                    <div class='col-md-6' style='font-size: 1.5vw; background-color: #000; color: #fff'>{{beer.beername}}</div>
                    <div class='col-md-6' style='font-size: 1.5vw'>{{beer.style}}</div>
                  </div>
                  <div class='row'>
                    <div class='col-md-3' style='font-size: 1.0vw'>{{beer.brewery}}</div>
                    <div class='col-md-3' style='font-size: 1.0vw'>ABV: {{beer.abv}}</div>
                    <div class='col-md-3' style='font-size: 1.0vw'>Rating: {{beer.avgrating}}</div>
                    <h4 class='col-md-3'></h4>
                  </div>
               <!--  </div> -->
                <div id='target'></div>
                <div class='row clickable-row-high'>
                  <div id='beername' class='hidden col-md-6' style='font-size: 1.5vw; background-color: #1DC; color: #fff'></div>
                  <div id='beerstyle' class='hidden col-md-6' style='font-size: 1.5vw'></div>
                </div>
                <div class='row'>
                  <div id='brewery' class='hidden col-md-6' style='font-size: 1.0vw'></div>
                  <!-- <div class='hidden col-md-3' style='font-size: 1.0vw'>ABV: </div> -->
                  <div id='rating' class='hidden col-md-6' style='font-size: 1.0vw'>Rating: </div>
                 <!--  <h4 class='hidden col-md-3'></h4> -->
                </div>
            </div>

            
        </div>
   <!--  <div class='container'>
        <form action="/beer/review">
        
          <input type="text" name="beerid" value={{beer.beerid}}><br>
          <input type="submit" value="Submit">
        </form>
    </div> -->
        <div class='col-md-6'>
            <!-- <div class='container'> -->
                <table id='simtab' class='table table-striped table-hover'>
                  
                    <thead>
                      <tr>
                            <th style='padding-left: 0%'>
                              <h4>Most Similar Beers</h4>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                      {{#each simbeers}}
                          <tr class="clickable-row-comp" data-href="/beer/{{beerid}}" data-beerid="{{beerid}}" data-desclist={{{json desclist}}}>
                            <td style='padding-left: 0%'>
                                {{{beername}}}
                            </td>
                            
                            <td class='hidden' style='padding-left: 0%'>
                                {{{brewery}}}
                            </td>
                            <td style='padding-left: 0%'>
                                {{{state}}}
                            </td>
                            <td class='hidden' style='padding-left: 0%'>
                                {{{style}}}
                            </td>
                            <td class='hidden' style='padding-left: 0%'>
                                Rating: {{{avgrating}}}
                            </td>
                            <!-- <td style='padding-left: 0%'>
                                Distance: {{{distance}}}
                            </td> -->
                          </tr>
                        {{/each}}
                    </tbody>

                </table>

                <div class='row'>
                  <div class='custom-select'>
              <select class='state-select'>
                <option value='0'>Select State:</option>
                <option value='US'>US</option>
                <option value="AL">Alabama</option>
                <option value="AK">Alaska</option>
                <option value="AZ">Arizona</option>
                <option value="AR">Arkansas</option>
                <option value="CA">California</option>
                <option value="CO">Colorado</option>
                <option value="CT">Connecticut</option>
                <option value="DE">Delaware</option>
                <option value="DC">District Of Columbia</option>
                <option value="FL">Florida</option>
                <option value="GA">Georgia</option>
                <option value="HI">Hawaii</option>
                <option value="ID">Idaho</option>
                <option value="IL">Illinois</option>
                <option value="IN">Indiana</option>
                <option value="IA">Iowa</option>
                <option value="KS">Kansas</option>
                <option value="KY">Kentucky</option>
                <option value="LA">Louisiana</option>
                <option value="ME">Maine</option>
                <option value="MD">Maryland</option>
                <option value="MA">Massachusetts</option>
                <option value="MI">Michigan</option>
                <option value="MN">Minnesota</option>
                <option value="MS">Mississippi</option>
                <option value="MO">Missouri</option>
                <option value="MT">Montana</option>
                <option value="NE">Nebraska</option>
                <option value="NV">Nevada</option>
                <option value="NH">New Hampshire</option>
                <option value="NJ">New Jersey</option>
                <option value="NM">New Mexico</option>
                <option value="NY">New York</option>
                <option value="NC">North Carolina</option>
                <option value="ND">North Dakota</option>
                <option value="OH">Ohio</option>
                <option value="OK">Oklahoma</option>
                <option value="OR">Oregon</option>
                <option value="PA">Pennsylvania</option>
                <option value="RI">Rhode Island</option>
                <option value="SC">South Carolina</option>
                <option value="SD">South Dakota</option>
                <option value="TN">Tennessee</option>
                <option value="TX">Texas</option>
                <option value="UT">Utah</option>
                <option value="VT">Vermont</option>
                <option value="VA">Virginia</option>
                <option value="WA">Washington</option>
                <option value="WV">West Virginia</option>
                <option value="WI">Wisconsin</option>
                <option value="WY">Wyoming</option>
              </select>
             
         </div>
            <!-- <div class='col-md-4'> -->
              <button class='clickable-filter beer-button col-md-4' data-href="/beer/{{beer.beerid}}" data-beerid='{{beer.beerid}}' data-style='{{beer.style}}'>Filter</button>

            <!-- </div> -->
            </div>
        </div>
    </div>
</div>
<script src="js/d3.v3.min.js"></script>
<script src="js/d3-starPlot.js"></script>
<script>
var keys = Object.keys({{{json descs}}}).sort()
console.log({{{json descs}}})
var hoverElm = null
$(".clickable-row").on("mouseenter", function() { hoverElm = this; console.log("hit") })

var vals = keys.map(function (key) {return {{{json descs}}}[key]})

var max = Math.max.apply(null, vals)

var margin = {
  top: 36,
  right: 50,
  bottom: 20,
  left: 50
};
var width = 440 - margin.left - margin.right;
var height = 440 - margin.top - margin.bottom;
var labelMargin = 8;

var scale = d3.scale.linear()
  .domain([0, max])
  .range([0, 100])
//console.log({{{json descs}}})

//console.log(keys)
var star = d3.starPlot()
      .width(width)
      .accessors([
        function(d) { return scale(d[keys[0]]); },
        function(d) { return scale(d[keys[1]]); },
        function(d) { return scale(d[keys[2]]); },
        function(d) { return scale(d[keys[3]]); },
        function(d) { return scale(d[keys[4]]); },
        function(d) { return scale(d[keys[5]]); },
        function(d) { return scale(d[keys[6]]); },
        function(d) { return scale(d[keys[7]]); },
        function(d) { return scale(d[keys[8]]); },
        function(d) { return scale(d[keys[9]]); },
        function(d) { return scale(d[keys[10]]); },
        function(d) { return scale(d[keys[11]]); },
        function(d) { return scale(d[keys[12]]); },
        function(d) { return scale(d[keys[13]]); },
        function(d) { return scale(d[keys[14]]); },
      ])
      .accessors2([
        function(d) { return scale(d[keys[0]]); },
        function(d) { return scale(d[keys[1]]); },
        function(d) { return scale(d[keys[2]]); },
        function(d) { return scale(d[keys[3]]); },
        function(d) { return scale(d[keys[4]]); },
        function(d) { return scale(d[keys[5]]); },
        function(d) { return scale(d[keys[6]]); },
        function(d) { return scale(d[keys[7]]); },
        function(d) { return scale(d[keys[8]]); },
        function(d) { return scale(d[keys[9]]); },
        function(d) { return scale(d[keys[10]]); },
        function(d) { return scale(d[keys[11]]); },
        function(d) { return scale(d[keys[12]]); },
        function(d) { return scale(d[keys[13]]); },
        function(d) { return scale(d[keys[14]]); },
                        
      ])
      .labels([
        keys[0],
        keys[1],
        keys[2],
        keys[3],
        keys[4],
        keys[5],
        keys[6],
        keys[7],
        keys[8],
        keys[9],
        keys[10],
        keys[11],
        keys[12],
        keys[13],
        keys[14],
       
      ])
      .margin(margin)
      .labelMargin(labelMargin)

$(document).ready(function($) {
            $(".clickable-row-comp").click(function() {

                $("#beername").text($(this).find('td').eq(0).text())
                $("#beerstyle").text($(this).find('td').eq(3).text()) 
                $("#brewery").text($(this).find('td').eq(1).text()) 
                $("#rating").text($(this).find('td').eq(4).text())

                $("#beername").removeClass('hidden')
                $("#beerstyle").removeClass('hidden')
                $("#brewery").removeClass('hidden')
                $("#rating").removeClass('hidden')

                if ($(this).siblings(".highlighted").length > 0){
                  $(this).siblings(".highlighted").eq(0).removeClass('highlighted')
                }
                
                $(this).addClass('highlighted')


                $('#target').empty()  
                var list = $(this).data("desclist")
               
                var accesslist = [{{{json descs}}}, list]
                // console.log(accesslist)
                //$(":animated").finish()
                // for (x in $(this).data("desclist")){
                //     //console.log($(this).data("desclist")[x])
                //     $("#"+x.split('/')[0]+"bar").animate({width: $(this).data("desclist")[x]+'%', 'margin-left': (99.5 - $(this).data("desclist")[x])+'%'}, 200)
                //     //accesslist.push(function(d){return scale(d[x]);})
                // }
                
                //console.log(accesslist)
                star.secondset(true)
                  
                
                d3.select('#target').append('svg')
                    .attr('class', 'chart')
                    .attr('width', width + margin.left + margin.right)
                    .attr('height', width + margin.top + margin.bottom)
                    .append('g')
                      .datum(accesslist)
                      .call(star)
            })
        });


d3.select('#target').append('svg')
        .attr('class', 'chart')
        .attr('width', width + margin.left + margin.right)
        .attr('height', width + margin.top + margin.bottom)
        .append('g')
          .datum([{{{json descs}}}])
          .call(star)


var x, i, j, selElmnt, a, b, c;
/*look for any elements with the class "custom-select":*/
x = document.getElementsByClassName("custom-select");
for (i = 0; i < x.length; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  /*for each element, create a new DIV that will act as the selected item:*/
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);
  /*for each element, create a new DIV that will contain the option list:*/
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < selElmnt.length; j++) {
    /*for each option in the original select element,
    create a new DIV that will act as an option item:*/
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
        /*when an item is clicked, update the original select box,
        and the selected item:*/
        var y, i, k, s, h;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        h = this.parentNode.previousSibling;
        for (i = 0; i < s.length; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            for (k = 0; k < y.length; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
      /*when the select box is clicked, close any other select boxes,
      and open/close the current select box:*/
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
  });
}
function closeAllSelect(elmnt) {
  /*a function that will close all select boxes in the document,
  except the current select box:*/
  var x, y, i, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
/*if the user clicks anywhere outside the select box,
then close all select boxes:*/
document.addEventListener("click", closeAllSelect);
</script>